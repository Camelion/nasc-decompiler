/*
 * Copyright 2015-2017 JTS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

System.setProperty("file.encoding", "UTF-8")

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'scala'

buildscript {
	ext {
		springBootVersion = '1.2.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

allprojects {
	repositories {
		mavenCentral()
	}

	compileJava.options.compilerArgs << '-parameters'
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	jar.version = "0.0.1"

	apply plugin: 'spring-boot'
}

jar {
	baseName = 'decompiler'
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter")
	compile("org.springframework.boot:spring-boot-starter-logging")
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.scala-lang:scala-library:+")

	runtime("org.hsqldb:hsqldb")

	testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun.doLast {
	project(':data').tasks.jar.execute()
}

eclipse {
	classpath {
		containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.3'
}
